@page "/Category"
@inject ICategoryRepository CategoryRepository 

@if (IsProcessing)
{
    <MudContainer Class="d-flex vh-100" Style="position: relative;">
        <div class="m-auto">
            <img src="/img/loading.gif" alt="loading"/>
        </div>
    </MudContainer>
}
else
{
    <MudCard>
        <MudCardHeader Style="text-align:center;background-color:black;">
            <CardHeaderContent>
                <MudText Typo="Typo.h6" Class="text-white">CategoryList</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <div style="display: flex;justify-content: flex-end;">
                <MudButton Variant="Variant.Filled" Color="Color.Secondary">Add New Category</MudButton>
            </div>
            @if (Categories.Any())
            {
                <MudDataGrid Items="Categories" Filterable="false" SortMode="SortMode.None" Groupable="false" Bordered="true">
                    <Columns>
                        <PropertyColumn Property="x => x.Name"></PropertyColumn>
                        <TemplateColumn>
                            <CellTemplate>
                                <MudButton Size="Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Button</MudButton>
                            </CellTemplate>
                        </TemplateColumn>
                    </Columns>
                </MudDataGrid>
            }

        </MudCardContent>
    </MudCard>
}


@code {
    private bool IsProcessing { get; set; } = false;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        await Task.Delay(2000);
        LoadCategories();
        IsProcessing = false;
    }

    private void LoadCategories()
    {
        Categories = CategoryRepository.GetAll();
    }

}